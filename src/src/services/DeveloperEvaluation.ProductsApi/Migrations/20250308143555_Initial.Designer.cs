// <auto-generated />
using System;
using DeveloperEvaluation.ProductsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeveloperEvaluation.ProductsApi.Migrations
{
    [DbContext(typeof(ProductDBContext))]
    [Migration("20250308143555_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeveloperEvaluation.ProductsApi.Models.Products", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Categoria");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Image")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Imagem");

                    b.Property<decimal>("Price")
                        .HasPrecision(20, 5)
                        .HasColumnType("numeric(20,5)")
                        .HasColumnName("Valor");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("DeveloperEvaluation.ProductsApi.Models.Products", b =>
                {
                    b.OwnsOne("DeveloperEvaluation.ProductsApi.ValueObjects.RattingValueObjects", "Ratting", b1 =>
                        {
                            b1.Property<Guid>("ProductsId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<int?>("Count")
                                .HasColumnType("integer")
                                .HasColumnName("Contador");

                            b1.Property<decimal?>("Rate")
                                .HasPrecision(20, 5)
                                .HasColumnType("numeric(20,5)")
                                .HasColumnName("Rate");

                            b1.HasKey("ProductsId");

                            b1.ToTable("Produtos");

                            b1.WithOwner()
                                .HasForeignKey("ProductsId");
                        });

                    b.Navigation("Ratting")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
